// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: mlagents/envs/communicator_objects/agent_action_proto.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct AgentActionProto {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var vectorActions: [Float] {
    get {return _storage._vectorActions}
    set {_uniqueStorage()._vectorActions = newValue}
  }

  var textActions: String {
    get {return _storage._textActions}
    set {_uniqueStorage()._textActions = newValue}
  }

  var memories: [Float] {
    get {return _storage._memories}
    set {_uniqueStorage()._memories = newValue}
  }

  var value: Float {
    get {return _storage._value}
    set {_uniqueStorage()._value = newValue}
  }

  var customAction: CustomAction {
    get {return _storage._customAction ?? CustomAction()}
    set {_uniqueStorage()._customAction = newValue}
  }
  /// Returns true if `customAction` has been explicitly set.
  var hasCustomAction: Bool {return _storage._customAction != nil}
  /// Clears the value of `customAction`. Subsequent reads from it will return its default value.
  mutating func clearCustomAction() {_uniqueStorage()._customAction = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "communicator_objects"

extension AgentActionProto: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".AgentActionProto"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "vector_actions"),
    2: .standard(proto: "text_actions"),
    3: .same(proto: "memories"),
    4: .same(proto: "value"),
    5: .standard(proto: "custom_action"),
  ]

  fileprivate class _StorageClass {
    var _vectorActions: [Float] = []
    var _textActions: String = String()
    var _memories: [Float] = []
    var _value: Float = 0
    var _customAction: CustomAction? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _vectorActions = source._vectorActions
      _textActions = source._textActions
      _memories = source._memories
      _value = source._value
      _customAction = source._customAction
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedFloatField(value: &_storage._vectorActions)
        case 2: try decoder.decodeSingularStringField(value: &_storage._textActions)
        case 3: try decoder.decodeRepeatedFloatField(value: &_storage._memories)
        case 4: try decoder.decodeSingularFloatField(value: &_storage._value)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._customAction)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._vectorActions.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._vectorActions, fieldNumber: 1)
      }
      if !_storage._textActions.isEmpty {
        try visitor.visitSingularStringField(value: _storage._textActions, fieldNumber: 2)
      }
      if !_storage._memories.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._memories, fieldNumber: 3)
      }
      if _storage._value != 0 {
        try visitor.visitSingularFloatField(value: _storage._value, fieldNumber: 4)
      }
      if let v = _storage._customAction {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: AgentActionProto, rhs: AgentActionProto) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._vectorActions != rhs_storage._vectorActions {return false}
        if _storage._textActions != rhs_storage._textActions {return false}
        if _storage._memories != rhs_storage._memories {return false}
        if _storage._value != rhs_storage._value {return false}
        if _storage._customAction != rhs_storage._customAction {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
